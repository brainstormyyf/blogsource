/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var d=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var p=Object.prototype.hasOwnProperty;var u=(t,s)=>{for(var n in s)d(t,n,{get:s[n],enumerable:!0})},S=(t,s,n,a)=>{if(s&&typeof s=="object"||typeof s=="function")for(let e of m(s))!p.call(t,e)&&e!==n&&d(t,e,{get:()=>s[e],enumerable:!(a=w(s,e))||a.enumerable});return t};var f=t=>S(d({},"__esModule",{value:!0}),t);var W={};u(W,{default:()=>C});module.exports=f(W);var c=require("obsidian"),g=require("@codemirror/view");var o=require("obsidian"),l=class extends o.PluginSettingTab{constructor(n,a){super(n,a);this.plugin=a}async save(){await this.plugin.updateSettings(this.newSettings)}async display(){await this.plugin.loadSettings(),this.reset()}async reset(){this.newSettings=JSON.parse(JSON.stringify(this.plugin.settings)),this.drawElements()}drawElements(){let n=this.plugin.manifest.id,a=this.plugin.manifest.name;this.containerEl.empty(),this.containerEl.addClass(n),new o.Setting(this.containerEl).setHeading().setName(a),new o.Setting(this.containerEl).setName("Save settings").setClass(n+"-save-reset").addButton(e=>e.setIcon("reset").setTooltip("Reset to previously saved (or generated) values").onClick(()=>{this.reset(),console.log("(SW-CM6) Configuration reset")})).addButton(e=>{e.setIcon("save").setTooltip("Save current values").onClick(async()=>{await this.save()}),this.saveButton=e.buttonEl}),new o.Setting(this.containerEl).setName("Suppress plugin styles").setDesc("Enable to remove plugin styles. You will need to define your own snippet to customize the appearance of whitespace").addToggle(e=>e.setValue(this.newSettings.disablePluginStyles).onChange(async i=>{let h=i!=this.newSettings.disablePluginStyles;this.newSettings.disablePluginStyles=i,h&&this.drawElements()})),new o.Setting(this.containerEl).setName("Always show blockquote markers").setDesc("Show the leading > for blockquotes in Live Preview").addToggle(e=>e.setValue(this.newSettings.showBlockquoteMarkers).onChange(async i=>{let h=i!=this.newSettings.showBlockquoteMarkers;this.newSettings.showBlockquoteMarkers=i,h&&this.drawElements()})),new o.Setting(this.containerEl).setName("Show all whitespace characters in code blocks").setDesc("Add a marker for all whitespace characters in code blocks (included in Show all whitespace)").addToggle(e=>e.setValue(this.newSettings.showCodeblockWhitespace).onChange(async i=>{i=i||this.newSettings.showAllWhitespace;let h=i!=this.newSettings.showCodeblockWhitespace;this.newSettings.showCodeblockWhitespace=i,h&&this.drawElements()})),new o.Setting(this.containerEl).setName("Show all whitespace characters").setDesc("Add a marker for all whitespace characters, even those between words").addToggle(e=>e.setValue(this.newSettings.showAllWhitespace).onChange(async i=>{let h=i!=this.newSettings.showAllWhitespace;this.newSettings.showAllWhitespace=i,h&&this.drawElements()})),new o.Setting(this.containerEl).setName("Outline list markers").setDesc("Add a style to space reserved by list markers (e.g. ' -' or ' 1.')").addToggle(e=>e.setValue(this.newSettings.outlineListMarkers).onChange(async i=>{let h=i!=this.newSettings.outlineListMarkers;this.newSettings.outlineListMarkers=i,h&&this.drawElements()}))}hide(){this.save()}};var b={version:{major:0,minor:0,patch:0},disablePluginStyles:!1,showBlockquoteMarkers:!1,showCodeblockWhitespace:!1,showAllWhitespace:!1,outlineListMarkers:!1},r=class extends c.Plugin{constructor(){super(...arguments);this.cmExtension=[];this.classList=[];this.onExternalSettingsChange=(0,c.debounce)(async()=>{this.settings=Object.assign({},this.settings,await this.loadData()),this.removeClasses(),this.initClasses(),console.debug("(SW-CM6) external settings changed")},2e3,!0)}async onload(){console.info("loading Show Whitespace (SW-CM6) v"+this.manifest.version),await this.loadSettings(),this.addSettingTab(new l(this.app,this)),document.body.classList.add(this.manifest.id),this.initClasses(),this.cmExtension.push((0,g.highlightWhitespace)()),this.cmExtension.push((0,g.highlightTrailingWhitespace)()),this.registerEditorExtension(this.cmExtension)}initClasses(){this.classList=[],this.settings.disablePluginStyles&&this.classList.push("swcm6-nix-plugin-styles"),this.settings.showBlockquoteMarkers&&this.classList.push("swcm6-show-blockquote-markers"),this.settings.showCodeblockWhitespace&&this.classList.push("swcm6-show-codeblock-whitespace"),this.settings.showAllWhitespace&&this.classList.push("swcm6-show-all-whitespace"),this.settings.outlineListMarkers&&this.classList.push("swcm6-outline-list-markers"),document.body.classList.add(...this.classList)}removeClasses(){document.body.classList.remove(...this.classList)}onunload(){console.log("(SW-CM6) unloading Show Whitespace"),document.body.classList.add(this.manifest.id),this.removeClasses()}async handleConfigFileChange(){await super.handleConfigFileChange(),this.onExternalSettingsChange()}async loadSettings(){if(!this.settings){let n=await this.loadData();this.settings=Object.assign({},b,n);let a=y(this.manifest.version);k(a,this.settings.version)!=0&&(this.settings.version=a,await this.saveSettings())}}async updateSettings(n){this.settings=Object.assign({},this.settings,n),await this.saveSettings(),this.removeClasses(),this.initClasses(),console.log("(SW-CM6) settings and classes updated")}async saveSettings(){await this.saveData(this.settings)}};function k(t,s){return t.major===s.major?t.minor===s.minor?t.patch-s.patch:t.minor-s.minor:t.major-s.major}function y(t){let s=t.split(".");return{major:Number(s[0]),minor:Number(s[1]),patch:Number(s[2])}}var C=r;
